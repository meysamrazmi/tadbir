<?php

/**
 * @file Provides Zarinpal Payment Gateway for Ubercart 3.x
 * @author "Ahmad Hejazee" <mngafa@gmail.com>
 * 
 * @see http://www.hejazee.ir/
 * @see http://www.tolooco.com/
 * 
 * Copyright 2014-2015 - Tolooco.Com - All rights reserved.
 * For Licence, see README.txt and README.fa.txt
 */

/**
 * Implements hook_menu()
 */
function uc_zarinpal_menu() {
  $items = array();

  $items['cart/zarinpal/complete/%'] = array(
    'title' => 'Order complete',
    'page callback' => 'uc_zarinpal_complete_page',
    'page arguments' => array(3),
    'access callback' => 'uc_zarinpal_completion_access',
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Access callback for cart/zarinpal/complete/%
 */
function uc_zarinpal_completion_access() {
  // All user have access to finish the payment.
  return TRUE;
}

/**
 * Menu callback for cart/zarinpal/complete
 */
function uc_zarinpal_complete_page($order_id) {
  // Although Drupal has a built-in class autoloader, It's not compatible with ioncube.
  // So we load the class manually to make sure.
  require_once dirname(__FILE__) . '/zarinpal.class.inc';
  
  // Check if $order_id is valid
  $order = NULL;
  
  if (is_numeric($order_id)) {
    // Load order object
    $order_id = (int) $order_id;
    $order = uc_order_load($order_id);
  }

  if (!is_object($order)) {
    $msg = t('Order invalid.');
    drupal_set_message($msg, 'error');
    watchdog('zarinpal', 'Invalid order id passed to uc_zarinpal_complete_page()', WATCHDOG_ERROR);
    
    return $msg;
  }

  // Get merchant ID from module settings.
  $merchantID = variable_get('uc_zarinpal_MerchantID', '');
  if (empty($merchantID)) {
    $msg = t('Zarinpal is not configured properly.');
    drupal_set_message($msg, 'error');
    
    return $msg;
  }
  
  // Build parameters for Zarinpal class constructor
  // Actually we only need $merchantID, $order_total for verifyTransaction() method
  $order_total = $order->order_total;
  // Not needed for verification
  $description = '';
  // Not needed for verification
  $callbackURL = '';

  // Build zarinpal object with above parameters
  $zp = new Zarinpal($merchantID, $order_total, $description, $callbackURL);

  // Verify Transaction
  try {
    $refid = $zp->verifyTransaction();
  }
  catch (ZarinpalException $e) {
    $msg = 'No vaild authority sent by zarinpal. Payment failed.';
    drupal_set_message(t($msg), 'error');
    watchdog('zarinpal', $msg, array(), WATCHDOG_ERROR);

    return $msg;
  }
  catch (ZarinpalExceptionNok $e) {
    $msg = 'Transaction not successful or cancelled by user.';
    drupal_set_message(t($msg), 'error');
    watchdog('zarinpal', $msg, array(), WATCHDOG_ERROR);

    return $msg;
  }
  catch (ZarinpalExceptionVerification $e) {
    // Verification failed.
    watchdog_exception('zarinpal', $e);
    $msg = $e->getMessage();
    drupal_set_message($msg, 'error');

    return $msg;
  }
  catch (\Exception $e) {
    $msg = t('An unexpected error occured.');
    drupal_set_message($msg, 'error');
    watchdog_exception('zarinpal', $e);

    return $msg;
  }

  //Log payment success
  watchdog('zarinpal', 'Zarinpal payment #%refid verification succeeded', array('%refid' => $refid), WATCHDOG_INFO);
  $message = t('Payment successful. Refernce: %refid', array('%refid' => $refid));

  uc_payment_enter($order->order_id, $order->payment_method, $order->order_total, 0, NULL, 'Paid Successfully');

  $output = uc_cart_complete_sale($order, variable_get('uc_new_customer_login', FALSE));

  $page = variable_get('uc_cart_checkout_complete_page', '');
  if (!empty($page)) {
    drupal_goto($page);
  }

  return '<p>' . $message . '</p>' . drupal_render($output);
}

/**
 * Implements hook_uc_payment_method().
 */
function uc_zarinpal_uc_payment_method() {
  $path = drupal_get_path('module', 'uc_zarinpal') . "/zarinpal.png";

  $title = theme('image', array(
    'path' => $path,
    'alt' => t('Zarinpal Gateway'),
    'title' => t('Zarinpal Gateway'),
    'attributes' => array(
      'style' => 'margin-bottom: -5px; position: relative; top: 2px;',
    ),
  ));  

  $title .= t('Zarinpal Gateway');

  $methods = array();
  $methods['zarinpal'] = array(
    'name'     => t('Zarinpal Gateway'),
    'title'    => $title,
    'desc'     => t('Redirect to Zarinpal Gateway to pay by credit card.'),
    'callback' => 'uc_payment_method_zarinpal',
    'weight'   => 1,
    'checkout' => TRUE,
    'redirect' => 'uc_zarinpal_pay_submission_form',
  );

  return $methods;
}

/**
 * Payment method callback
 */
function uc_payment_method_zarinpal($op, &$order, $form = NULL, &$form_state = NULL) {
  switch ($op) {
    case 'cart-process':
      $_SESSION['pay_method'] = 'zarinpal';

      return NULL;
      break;

    case 'settings':
      $form['uc_zarinpal_MerchantID'] = array(
        '#type'          => 'textfield',
        '#title'         => t('MerchantID'),
        '#description'   => t('Your Zarinpal account merchantID.'),
        '#default_value' => variable_get('uc_zarinpal_MerchantID', ''),
        '#size'          => 16,
      );

      $soap_options = array('nusoap' => t('Nusoap library (Recommended)'));
      if (class_exists('SoapClient')) {
        $soap_options['soapclient'] = t('PHP SoapClient class');
      }
      $form['uc_zarinpal_soapmode'] = array(
        '#type'          => 'radios',
        '#title'         => t('Soap Mode'),
        '#default_value' => variable_get('uc_zarinpal_soapmode', 'nusoap'),
        '#options'       => $soap_options,
        '#required'      => TRUE,
      );

      return $form;
      break;

    default:
      break;
  }

  //should not return anything. we don't know in which switch case it is
}

/**
 * Form Builder.
 *
 * The payment form which will be submitted to the gateway.
 */
function uc_zarinpal_pay_submission_form($form_state, $order) {
  // Although Drupal has a built-in class autoloader, It's not compatible with ioncube.
  // So we load the class manually to make sure.
  require_once dirname(__FILE__) . '/zarinpal.class.inc';
  
  $merchantID = variable_get('uc_zarinpal_MerchantID', '');

  if (empty($merchantID)) {
    drupal_set_message(t('Zarinpal is not configured properly.'), 'error');

    return array();
  }

  //Build parameters for payment request
  $order_total = $order['build_info']['args'][0]->order_total;
  $order_id = $order['build_info']['args'][0]->order_id;
  $description = 'Order #' . $order_id;
  $callbackURL = url("cart/zarinpal/complete/{$order_id}", array('absolute' => TRUE));
  $email = '';
  $mobile = '';

  //Build zarinpal object with above parameters
  $zp = new Zarinpal($merchantID, $order_total, $description, $callbackURL, $email, $mobile);

  // Request payment
  try {
    $authority = $zp->paymentRequest();
  }
  catch (\Exception $e) {
    $msg = $e->getMessage();
    drupal_set_message($msg, 'error');
    watchdog_exception('zarinpal', $e);

    return array();
  }

  // Build Gate URL
  $url = $zp->buildGateURL($authority);

  // Build the form
  $form = array();
  $form['#action'] = $url;

  $form['submit'] = array(
    '#type'  => 'submit',
    '#value' => t('Submit Order')
  );

  return $form;
}
