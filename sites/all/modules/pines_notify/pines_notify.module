<?php
/**
 * @file
 * The Pines Notify module displays messages through growl notifications.
 */

/**
 * Implements hook_page_build().
 */
function pines_notify_page_build() {
  // Load jquery UI for styling purposes.
  drupal_add_library('system', 'ui');

  // Add and initialize the Pines Notify plugin.
  libraries_load('pnotify');

  // Pines Notify configurations and settings.
  $settings = array();
  $settings['title_success'] = t(variable_get('pines_notify_title_success', 'Success'));
  $settings['title_error'] = t(variable_get('pines_notify_title_error', 'Error'));
  $settings['animation'] = variable_get('pines_notify_animation', 'fade');
  $settings['delay'] = variable_get('pines_notify_delay', 10000);
  $settings['opacity'] = variable_get('pines_notify_opacity', '0.75');
  $settings['shadow'] = variable_get('pines_notify_shadow', 1);
  $settings['hide'] = variable_get('pines_notify_hide', 1);
  $settings['nonblock'] = variable_get('pines_notify_nonblock', 1);
  $settings['desktop'] = variable_get('pines_notify_desktop', 1);
  // Set the drupal javascript settings for Pines Notify.
  drupal_add_js(array('pines_notify' => $settings), 'setting');

  // Custom js and css for this module.
  drupal_add_js(
    drupal_get_path('module', 'pines_notify') . '/js/pines_notify.js',
    array(
      'weight' => 10000,
      'scope' => 'footer',
      'group' => JS_THEME,
    )
  );
  drupal_add_css(drupal_get_path('module', 'pines_notify') . '/css/pines_notify.css');
}

/**
 * Implements hook_menu().
 */
function pines_notify_menu() {
  $items = array();
  $items['admin/config/user-interface/pines-notify'] = array(
    'title' => 'Pines Notify',
    'description' => 'User notifications',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('pines_notify_settings_form'),
    'access arguments' => array('administer site configuration'),
    'file' => 'pines_notify.admin.inc',
  );
  return $items;
}

/**
 * Implements hook_theme().
 */
function pines_notify_theme($existing, $type, $theme, $path) {
  return array(
    'pines_notify' => array(
      'arguments' => array('content' => NULL),
    ),
  );
}

/**
 * Implements hook_theme_registry_alter().
 */
function pines_notify_theme_registry_alter(&$theme_registry) {
  $theme_registry['status_messages']['function'] = 'theme_pines_notify';
}

/**
 * Custom theme function that renders messages as notifications.
 */
function theme_pines_notify($display = NULL) {
  $message = drupal_get_messages($display['display'], TRUE);
  $output = '';

  if (!empty($message)) {
    // Success messages.
    if (isset($message['status'])) {
      foreach ($message['status'] as $status_message) {
        // Exclude devel output from pnotify output.
        if (strpos($status_message, 'krumo-root') === FALSE) {
          // Add the drupal message to our module's settings message bin.
          drupal_add_js(array('pines_notify' => array('messages' => array('success' => $status_message))), 'setting');
        }
        else {
          // Show devel output in the normal drupal message region.
          $output .= $status_message;
        }
      }
    }
    // Error messages.
    if (isset($message['error'])) {
      foreach ($message['error'] as $error_message) {
        // Add the drupal message to our module's settings message bin.
        drupal_add_js(array('pines_notify' => array('messages' => array('error' => $error_message))), 'setting');
      }
    }

    return $output;
  }
}

/**
 * Implements hook_libraries_info().
 */
function pines_notify_libraries_info() {
  $libraries['pnotify'] = array(
    'name' => 'Pines Notify plugin',
    'vendor url' => 'http://pinesframework.org/pnotify/',
    'download url' => 'https://github.com/sciactive/pnotify/archive/master.zip',
    'version arguments' => array(
      'file' => 'pnotify.core.js',
      'pattern' => '@(?i:PNotify) ([0-9\.a-z]+)@',
      'lines' => 2,
    ),
    'files' => array(
      'js' => array(
        'pnotify.core.js',
        'pnotify.nonblock.js',
        'pnotify.desktop.js',
        'pnotify.buttons.js',
      ),
      'css' => array(
        'pnotify.core.css',
      ),
    ),
  );

  return $libraries;
}
